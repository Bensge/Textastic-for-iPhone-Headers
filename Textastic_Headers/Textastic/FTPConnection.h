/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "Textastic-Structs.h"
#import "RemoteConnection.h"

@class NSMutableSet, NSDate, NSString, NSOperationQueue;

__attribute__((visibility("hidden")))
@interface FTPConnection : RemoteConnection {
	int protocol;
	NSString* host;
	unsigned port;
	NSString* user;
	NSString* password;
	NSString* path;
	unsigned encoding;
	NSDate* privateKeyModificationDate;
	BOOL passiveMode;
	BOOL showHiddenFiles;
	BOOL enableLog;
	BOOL verifySSLCertificate;
	int sslMode;
	BOOL usePublicKeyAuthentication;
	NSString* privateKeyFileName;
	NSOperationQueue* queue;
	NSMutableSet* curlHandles;
	int currentCurlHandleCount;
}
@property(readonly, assign) NSOperationQueue* queue;
@property(retain) NSDate* privateKeyModificationDate;
@property(assign) int sslMode;
@property(assign) BOOL verifySSLCertificate;
@property(assign) BOOL enableLog;
@property(copy) NSString* privateKeyFileName;
@property(assign) BOOL usePublicKeyAuthentication;
@property(assign) BOOL showHiddenFiles;
@property(assign) BOOL passiveMode;
@property(assign) unsigned encoding;
@property(copy) NSString* path;
@property(copy) NSString* password;
@property(copy) NSString* user;
@property(assign) unsigned port;
@property(copy) NSString* host;
@property(assign) int protocol;
-(int)curlProgressDownloadTotal:(double)total downloadNow:(double)now uploadTotal:(double)total3 uploadNow:(double)now4 connectionUserData:(XXStruct_pfqgTA*)data;
-(unsigned long)curlReadPtr:(void*)ptr size:(unsigned long)size number:(unsigned long)number connectionUserData:(XXStruct_pfqgTA*)data;
-(unsigned long)curlWritePtr:(void*)ptr size:(unsigned long)size number:(unsigned long)number isHeader:(BOOL)header connectionUserData:(XXStruct_pfqgTA*)data;
-(id)configurationViewControllerWithMode:(int)mode andDelegate:(id)delegate;
-(id)titleForConnectionList;
-(id)navigationItemTitleForPath:(id)path;
-(void)renameFile:(id)file newFileName:(id)name withDelegate:(id)delegate;
-(void)deleteFile:(id)file withDelegate:(id)delegate;
-(void)checkIfFileExistsAt:(id)at withDelegate:(id)delegate userData:(id)data;
-(void)createDirectory:(id)directory withDelegate:(id)delegate userData:(id)data;
-(id)stringByQuotingString:(id)string;
-(void)uploadFile:(id)file toDirectory:(id)directory withDelegate:(id)delegate;
-(void)downloadFile:(id)file toDirectory:(id)directory withDelegate:(id)delegate;
-(void)requestRemoteFileInformationArrayForSubdirectory:(id)subdirectory withDelegate:(id)delegate;
-(BOOL)setBasicCurlOptions:(void*)options withUserData:(XXStruct_pfqgTA*)userData error:(id*)error;
-(void)initializeConnectionUserData:(XXStruct_pfqgTA*)data withCurl:(void*)curl operation:(id)operation requestType:(int)type delegate:(id)delegate;
-(void)enqueueReusableCurlHandle:(void*)handle userData:(XXStruct_pfqgTA*)data;
-(void*)dequeueReusableCurlHandle;
-(id)errorWithCurlCode:(int)curlCode;
-(const char*)cStringFTPURLWithPath:(id)path isDirectory:(BOOL)directory;
-(id)escapePath:(id)path;
-(id)completeFilePathForRemotePath:(id)remotePath;
-(void)cancelAllRequests;
-(void)loadConfigFromDictionary:(id)dictionary;
-(id)configDictionary;
-(int)remoteConnectionType;
-(void)dealloc;
-(void)clearCurlHandles;
-(id)init;
@end

