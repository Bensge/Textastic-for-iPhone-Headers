/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "MPOAuthCredentialStore.h"
#import "MPOAuthParameterFactory.h"
#import <Foundation/NSObject.h>

@class NSURL, NSString, NSMutableDictionary;

__attribute__((visibility("hidden")))
@interface MPOAuthCredentialConcreteStore : NSObject <MPOAuthCredentialStore, MPOAuthParameterFactory> {
	NSMutableDictionary* store_;
	NSURL* baseURL_;
	NSURL* authenticationURL_;
}
@property(readonly, assign, nonatomic) NSString* timestamp;
@property(retain, nonatomic) NSString* signatureMethod;
@property(readonly, assign, nonatomic) NSString* password;
@property(readonly, assign, nonatomic) NSString* username;
@property(readonly, assign, nonatomic) NSString* consumerSecret;
@property(readonly, assign, nonatomic) NSString* consumerKey;
@property(retain, nonatomic) NSMutableDictionary* store;
@property(retain, nonatomic) NSString* sessionHandle;
@property(retain, nonatomic) NSString* accessTokenSecret;
@property(retain, nonatomic) NSString* accessToken;
@property(retain, nonatomic) NSString* requestTokenSecret;
@property(retain, nonatomic) NSString* requestToken;
@property(readonly, assign, nonatomic) NSString* signingKey;
@property(readonly, assign, nonatomic) NSString* tokenSecret;
@property(retain, nonatomic) NSURL* authenticationURL;
@property(retain, nonatomic) NSURL* baseURL;
-(id)oauthVersionParameter;
-(id)oauthNonceParameter;
-(id)oauthTimestampParameter;
-(id)oauthSignatureMethodParameter;
-(id)oauthTokenParameter;
-(id)oauthConsumerKeyParameter;
-(id)oauthParameters;
-(void)discardOAuthCredentials;
-(void)removeCredentialNamed:(id)named;
-(void)setCredential:(id)credential withName:(id)name;
-(id)credentialNamed:(id)named;
-(oneway void)dealloc;
-(id)initWithCredentials:(id)credentials forBaseURL:(id)baseURL withAuthenticationURL:(id)authenticationURL;
-(id)initWithCredentials:(id)credentials forBaseURL:(id)baseURL;
-(id)initWithCredentials:(id)credentials;
-(void)removeValueFromKeychainUsingName:(id)keychainUsingName;
-(id)findValueFromKeychainUsingName:(id)keychainUsingName returningItem:(id*)item;
-(id)findValueFromKeychainUsingName:(id)keychainUsingName;
-(void)addToKeychainUsingName:(id)keychainUsingName andValue:(id)value;
@end

